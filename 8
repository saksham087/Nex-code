import { StrictMode } from 'react';
import { createRoot } from 'react-dom/client';
import { BrowserRouter } from 'react-router-dom';
import { ClerkProvider, useAuth } from '@clerk/clerk-react';
import { ConvexReactClient } from 'convex/react';
import { ConvexProviderWithClerk } from 'convex/react-clerk';
import App from './App.tsx';
import './index.css';

const clerkPubKey = import.meta.env.VITE_CLERK_PUBLISHABLE_KEY;
const convexUrl = import.meta.env.VITE_CONVEX_URL;

const EnvError = ({ variableName, expectedFormat }: { variableName: string, expectedFormat: string }) => (
  <div className="min-h-screen bg-black text-white flex items-center justify-center p-8">
    <div className="max-w-2xl w-full bg-neutral-950 border border-red-500/50 rounded-lg p-8 text-center">
      <h1 className="text-3xl font-bold text-red-400 mb-4">Configuration Error</h1>
      <p className="text-neutral-300 mb-6">
        The environment variable <code className="bg-neutral-800 text-amber-400 px-2 py-1 rounded-md">{variableName}</code> is missing or invalid in your <code className="bg-neutral-800 text-amber-400 px-2 py-1 rounded-md">.env</code> file.
      </p>
      <div className="text-left bg-black p-4 rounded-lg border border-neutral-800">
        <p className="font-mono text-sm text-neutral-400">Please make sure your <code className="text-white">.env</code> file contains:</p>
        <pre className="text-green-400 mt-2 whitespace-pre-wrap">{`${variableName}="${expectedFormat}"`}</pre>
      </div>
      <p className="text-neutral-500 mt-6 text-sm">
        After adding the correct value, please restart the development server.
      </p>
    </div>
  </div>
);

if (!clerkPubKey || !clerkPubKey.startsWith("pk_")) {
  createRoot(document.getElementById('root')!).render(
    <EnvError variableName="VITE_CLERK_PUBLISHABLE_KEY" expectedFormat="pk_live_..." />
  );
} else if (!convexUrl || !convexUrl.startsWith("https://")) {
  createRoot(document.getElementById('root')!).render(
    <EnvError variableName="VITE_CONVEX_URL" expectedFormat="https://your-project-name.convex.cloud" />
  );
} else {
  const convex = new ConvexReactClient(convexUrl);

  createRoot(document.getElementById('root')!).render(
    <StrictMode>
      <BrowserRouter>
        <ClerkProvider publishableKey={clerkPubKey}>
          <ConvexProviderWithClerk client={convex} useAuth={useAuth}>
            <App />
          </ConvexProviderWithClerk>
        </ClerkProvider>
      </BrowserRouter>
    </StrictMode>,
  );
}
